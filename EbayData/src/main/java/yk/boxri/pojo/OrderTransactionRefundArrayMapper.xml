<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunke.quartz_order.dao.OrderTransactionRefundArrayMapper" >
  <resultMap id="BaseResultMap" type="com.yunke.quartz_order.entity.OrderTransactionRefundArray" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="transaction_id" property="transaction_id" jdbcType="VARCHAR" />
    <id column="transaction_refund_id" property="transaction_refund_id" jdbcType="INTEGER" />
    <result column="order_id" property="order_id" jdbcType="VARCHAR" />
    <result column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="shop_id" property="shop_id" jdbcType="INTEGER" />
    <result column="refund_amount" property="refund_amount" jdbcType="DOUBLE" />
    <result column="refund_amount_currency_id" property="refund_amount_currency_id" jdbcType="VARCHAR" />
    <result column="refund_from_seller" property="refund_from_seller" jdbcType="DOUBLE" />
    <result column="refund_from_seller_currency_id" property="refund_from_seller_currency_id" jdbcType="VARCHAR" />
    <result column="refund_id" property="refund_id" jdbcType="VARCHAR" />
    <result column="refund_time" property="refund_time" jdbcType="TIMESTAMP" />
    <result column="total_refund_to_buyer" property="total_refund_to_buyer" jdbcType="DOUBLE" />
    <result column="total_refund_to_buyer_currency_id" property="total_refund_to_buyer_currency_id" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from order_transaction_refund_array
    where transaction_id = #{transaction_id,jdbcType=VARCHAR}
      and transaction_refund_id = #{transaction_refund_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yunke.quartz_order.entity.OrderTransactionRefundArray" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into order_transaction_refund_array (transaction_id, transaction_refund_id, 
      order_id, user_id, shop_id, 
      refund_amount, refund_amount_currency_id, 
      refund_from_seller, refund_from_seller_currency_id, 
      refund_id, refund_time, total_refund_to_buyer, 
      total_refund_to_buyer_currency_id)
    values (#{transaction_id,jdbcType=VARCHAR}, #{transaction_refund_id,jdbcType=INTEGER}, 
      #{order_id,jdbcType=VARCHAR}, #{user_id,jdbcType=INTEGER}, #{shop_id,jdbcType=INTEGER}, 
      #{refund_amount,jdbcType=DOUBLE}, #{refund_amount_currency_id,jdbcType=VARCHAR}, 
      #{refund_from_seller,jdbcType=DOUBLE}, #{refund_from_seller_currency_id,jdbcType=VARCHAR}, 
      #{refund_id,jdbcType=VARCHAR}, #{refund_time,jdbcType=TIMESTAMP}, #{total_refund_to_buyer,jdbcType=DOUBLE}, 
      #{total_refund_to_buyer_currency_id,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yunke.quartz_order.entity.OrderTransactionRefundArray" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_transaction_refund_array
    set order_id = #{order_id,jdbcType=VARCHAR},
      user_id = #{user_id,jdbcType=INTEGER},
      shop_id = #{shop_id,jdbcType=INTEGER},
      refund_amount = #{refund_amount,jdbcType=DOUBLE},
      refund_amount_currency_id = #{refund_amount_currency_id,jdbcType=VARCHAR},
      refund_from_seller = #{refund_from_seller,jdbcType=DOUBLE},
      refund_from_seller_currency_id = #{refund_from_seller_currency_id,jdbcType=VARCHAR},
      refund_id = #{refund_id,jdbcType=VARCHAR},
      refund_time = #{refund_time,jdbcType=TIMESTAMP},
      total_refund_to_buyer = #{total_refund_to_buyer,jdbcType=DOUBLE},
      total_refund_to_buyer_currency_id = #{total_refund_to_buyer_currency_id,jdbcType=VARCHAR}
    where transaction_id = #{transaction_id,jdbcType=VARCHAR}
      and transaction_refund_id = #{transaction_refund_id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select transaction_id, transaction_refund_id, order_id, user_id, shop_id, refund_amount, 
    refund_amount_currency_id, refund_from_seller, refund_from_seller_currency_id, refund_id, 
    refund_time, total_refund_to_buyer, total_refund_to_buyer_currency_id
    from order_transaction_refund_array
    where transaction_id = #{transaction_id,jdbcType=VARCHAR}
      and transaction_refund_id = #{transaction_refund_id,jdbcType=INTEGER}
  </select>
  <select id="dynamicSelect" resultMap="BaseResultMap" parameterType="java.lang.String" >
     select transaction_id, transaction_refund_id, order_id, user_id, shop_id, refund_amount, 
    refund_amount_currency_id, refund_from_seller, refund_from_seller_currency_id, refund_id, 
    refund_time, total_refund_to_buyer, total_refund_to_buyer_currency_id
    from order_transaction_refund_array
    where order_id in
    <foreach collection="list" item="order_id" 
 		separator="," open="(" close=")">
 			#{order_id,jdbcType=VARCHAR}
 	</foreach> 
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select transaction_id, transaction_refund_id, order_id, user_id, shop_id, refund_amount, 
    refund_amount_currency_id, refund_from_seller, refund_from_seller_currency_id, refund_id, 
    refund_time, total_refund_to_buyer, total_refund_to_buyer_currency_id
    from order_transaction_refund_array
  </select>
  <insert id="insertBatch" parameterType="com.yunke.quartz_order.entity.OrderTransactionRefundArray" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into order_transaction_refund_array (transaction_id, 
      transaction_refund_id, order_id, 
      user_id, shop_id, refund_amount, 
      refund_amount_currency_id, refund_from_seller, 
      refund_from_seller_currency_id, refund_id, 
      refund_time, total_refund_to_buyer, 
      total_refund_to_buyer_currency_id)
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.transaction_id,jdbcType=VARCHAR}, 
      #{item.transaction_refund_id,jdbcType=INTEGER}, #{item.order_id,jdbcType=VARCHAR}, 
      #{item.user_id,jdbcType=INTEGER}, #{item.shop_id,jdbcType=INTEGER}, #{item.refund_amount,jdbcType=DOUBLE}, 
      #{item.refund_amount_currency_id,jdbcType=VARCHAR}, #{item.refund_from_seller,jdbcType=DOUBLE}, 
      #{item.refund_from_seller_currency_id,jdbcType=VARCHAR}, #{item.refund_id,jdbcType=VARCHAR}, 
      #{item.refund_time,jdbcType=TIMESTAMP}, #{item.total_refund_to_buyer,jdbcType=DOUBLE}, 
      #{item.total_refund_to_buyer_currency_id,jdbcType=VARCHAR})</foreach>
  </insert>
   <insert id="mergerBatch" parameterType="com.yunke.quartz_order.entity.OrderTransactionRefundArray" > 
	insert into order_transaction_refund_array (transaction_id, 
      transaction_refund_id, order_id, 
      user_id, shop_id, refund_amount, 
      refund_amount_currency_id, refund_from_seller, 
      refund_from_seller_currency_id, refund_id, 
      refund_time, total_refund_to_buyer, 
      total_refund_to_buyer_currency_id)
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.transaction_id,jdbcType=VARCHAR}, 
      #{item.transaction_refund_id,jdbcType=INTEGER}, #{item.order_id,jdbcType=VARCHAR}, 
      #{item.user_id,jdbcType=INTEGER}, #{item.shop_id,jdbcType=INTEGER}, #{item.refund_amount,jdbcType=DOUBLE}, 
      #{item.refund_amount_currency_id,jdbcType=VARCHAR}, #{item.refund_from_seller,jdbcType=DOUBLE}, 
      #{item.refund_from_seller_currency_id,jdbcType=VARCHAR}, #{item.refund_id,jdbcType=VARCHAR}, 
      #{item.refund_time,jdbcType=TIMESTAMP}, #{item.total_refund_to_buyer,jdbcType=DOUBLE}, 
      #{item.total_refund_to_buyer_currency_id,jdbcType=VARCHAR})</foreach>
	ON DUPLICATE KEY UPDATE
	  user_id = VALUES(user_id),
      shop_id = VALUES(shop_id),
      refund_amount = VALUES(refund_amount),
      refund_amount_currency_id = VALUES(refund_amount_currency_id),
      refund_from_seller = VALUES(refund_from_seller),
      refund_from_seller_currency_id = VALUES(refund_from_seller_currency_id),
      refund_time = VALUES(refund_time),
      total_refund_to_buyer = VALUES(total_refund_to_buyer),
      total_refund_to_buyer_currency_id = VALUES(total_refund_to_buyer_currency_id)
	</insert>
</mapper>