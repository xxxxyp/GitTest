<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunke.quartz_order.dao.ShopsMapper" >
  <resultMap id="BaseResultMap" type="com.yunke.quartz_order.entity.Shops" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="shop_id" property="shop_id" jdbcType="INTEGER" />
    <result column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="shop_name" property="shop_name" jdbcType="VARCHAR" />
    <result column="access_token" property="access_token" jdbcType="VARCHAR" />
    <result column="refresh_token" property="refresh_token" jdbcType="VARCHAR" />
    <result column="added_date" property="added_date" jdbcType="TIMESTAMP" />
    <result column="updated_date" property="updated_date" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from shops
    where shop_id = #{shop_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yunke.quartz_order.entity.Shops" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into shops (shop_id, user_id, token, 
      shop_name, access_token, refresh_token, 
      added_date, updated_date)
    values (#{shop_id,jdbcType=INTEGER}, #{user_id,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, 
      #{shop_name,jdbcType=VARCHAR}, #{access_token,jdbcType=VARCHAR}, #{refresh_token,jdbcType=VARCHAR}, 
      #{added_date,jdbcType=TIMESTAMP}, #{updated_date,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yunke.quartz_order.entity.Shops" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update shops
    set user_id = #{user_id,jdbcType=INTEGER},
      token = #{token,jdbcType=VARCHAR},
      shop_name = #{shop_name,jdbcType=VARCHAR},
      access_token = #{access_token,jdbcType=VARCHAR},
      refresh_token = #{refresh_token,jdbcType=VARCHAR},
      added_date = #{added_date,jdbcType=TIMESTAMP},
      updated_date = #{updated_date,jdbcType=TIMESTAMP}
    where shop_id = #{shop_id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select shop_id, user_id, token, shop_name, access_token, refresh_token, added_date, 
    updated_date
    from shops
    where shop_id = #{shop_id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select shop_id, user_id, token, shop_name, access_token, refresh_token, added_date, 
    updated_date
    from shops
  </select>
  <select id="selectAllByLimit" resultMap="BaseResultMap"  parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select shop_id, user_id, token, shop_name, access_token, refresh_token, added_date, 
    updated_date
    from shops
    limit  #{begin},20
  </select>
  <insert id="insertBatch" parameterType="com.yunke.quartz_order.entity.Shops" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into shops (shop_id, 
      user_id, token, shop_name, 
      access_token, refresh_token, 
      added_date, updated_date)
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.shop_id,jdbcType=INTEGER}, 
      #{item.user_id,jdbcType=INTEGER}, #{item.token,jdbcType=VARCHAR}, #{item.shop_name,jdbcType=VARCHAR}, 
      #{item.access_token,jdbcType=VARCHAR}, #{item.refresh_token,jdbcType=VARCHAR}, 
      #{item.added_date,jdbcType=TIMESTAMP}, #{item.updated_date,jdbcType=TIMESTAMP})</foreach>
  </insert>
</mapper>