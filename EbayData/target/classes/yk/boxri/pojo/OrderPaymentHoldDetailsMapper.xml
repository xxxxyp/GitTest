<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunke.quartz_order.dao.OrderPaymentHoldDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.yunke.quartz_order.entity.OrderPaymentHoldDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="order_id" property="order_id" jdbcType="VARCHAR" />
    <result column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="shop_id" property="shop_id" jdbcType="INTEGER" />
    <result column="expected_release_date" property="expected_release_date" jdbcType="TIMESTAMP" />
    <result column="num_of_req_seller_actions" property="num_of_req_seller_actions" jdbcType="INTEGER" />
    <result column="payment_hold_reason" property="payment_hold_reason" jdbcType="VARCHAR" />
    <result column="required_seller_action_values" property="required_seller_action_values" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from order_payment_hold_details
    where order_id = #{order_id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yunke.quartz_order.entity.OrderPaymentHoldDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into order_payment_hold_details (order_id, user_id, shop_id, 
      expected_release_date, num_of_req_seller_actions, 
      payment_hold_reason, required_seller_action_values
      )
    values (#{order_id,jdbcType=VARCHAR}, #{user_id,jdbcType=INTEGER}, #{shop_id,jdbcType=INTEGER}, 
      #{expected_release_date,jdbcType=TIMESTAMP}, #{num_of_req_seller_actions,jdbcType=INTEGER}, 
      #{payment_hold_reason,jdbcType=VARCHAR}, #{required_seller_action_values,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yunke.quartz_order.entity.OrderPaymentHoldDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_payment_hold_details
    set user_id = #{user_id,jdbcType=INTEGER},
      shop_id = #{shop_id,jdbcType=INTEGER},
      expected_release_date = #{expected_release_date,jdbcType=TIMESTAMP},
      num_of_req_seller_actions = #{num_of_req_seller_actions,jdbcType=INTEGER},
      payment_hold_reason = #{payment_hold_reason,jdbcType=VARCHAR},
      required_seller_action_values = #{required_seller_action_values,jdbcType=VARCHAR}
    where order_id = #{order_id,jdbcType=VARCHAR}
  </update>
  <update id="batchUpdate"  parameterType="com.yunke.quartz_order.entity.OrderPaymentHoldDetails">  
    <foreach collection="list" item="item" index="index" open="" close="" separator=";">  
     update order_payment_hold_details 
        <set>  
	  user_id = #{item.user_id,jdbcType=INTEGER},
      shop_id = #{item.shop_id,jdbcType=INTEGER},
      expected_release_date = #{item.expected_release_date,jdbcType=TIMESTAMP},
      num_of_req_seller_actions = #{item.num_of_req_seller_actions,jdbcType=INTEGER},
      payment_hold_reason = #{item.payment_hold_reason,jdbcType=VARCHAR},
      required_seller_action_values = #{item.required_seller_action_values,jdbcType=VARCHAR}
          </set>  
         where order_id = #{item.order_id,jdbcType=VARCHAR}  
      </foreach>  
  </update> 
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select order_id, user_id, shop_id, expected_release_date, num_of_req_seller_actions, 
    payment_hold_reason, required_seller_action_values
    from order_payment_hold_details
    where order_id = #{order_id,jdbcType=VARCHAR}
  </select>
  <select id="dynamicSelect" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select order_id, user_id, shop_id, expected_release_date, num_of_req_seller_actions, 
    payment_hold_reason, required_seller_action_values
    from order_payment_hold_details
    where order_id in
    <foreach collection="list" item="order_id" 
 		separator="," open="(" close=")">
 			#{order_id,jdbcType=VARCHAR}
 	</foreach> 
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select order_id, user_id, shop_id, expected_release_date, num_of_req_seller_actions, 
    payment_hold_reason, required_seller_action_values
    from order_payment_hold_details
  </select>
  <insert id="insertBatch" parameterType="com.yunke.quartz_order.entity.OrderPaymentHoldDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into order_payment_hold_details (order_id, 
      user_id, shop_id, expected_release_date, 
      num_of_req_seller_actions, payment_hold_reason, 
      required_seller_action_values)
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.order_id,jdbcType=VARCHAR}, 
      #{item.user_id,jdbcType=INTEGER}, #{item.shop_id,jdbcType=INTEGER}, #{item.expected_release_date,jdbcType=TIMESTAMP}, 
      #{item.num_of_req_seller_actions,jdbcType=INTEGER}, #{item.payment_hold_reason,jdbcType=VARCHAR}, 
      #{item.required_seller_action_values,jdbcType=VARCHAR})</foreach>
  </insert>
  <insert id="mergerBatch" parameterType="com.yunke.quartz_order.entity.OrderPaymentHoldDetails" > 
	 insert into order_payment_hold_details (order_id, 
      user_id, shop_id, expected_release_date, 
      num_of_req_seller_actions, payment_hold_reason, 
      required_seller_action_values)
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.order_id,jdbcType=VARCHAR}, 
      #{item.user_id,jdbcType=INTEGER}, #{item.shop_id,jdbcType=INTEGER}, #{item.expected_release_date,jdbcType=TIMESTAMP}, 
      #{item.num_of_req_seller_actions,jdbcType=INTEGER}, #{item.payment_hold_reason,jdbcType=VARCHAR}, 
      #{item.required_seller_action_values,jdbcType=VARCHAR})</foreach>
	ON DUPLICATE KEY UPDATE
	  user_id = VALUES(user_id),
      shop_id = VALUES(shop_id),
      expected_release_date = VALUES(expected_release_date),
      num_of_req_seller_actions = VALUES(num_of_req_seller_actions),
      payment_hold_reason = VALUES(payment_hold_reason),
      required_seller_action_values = VALUES(required_seller_action_values)
	</insert>
</mapper>