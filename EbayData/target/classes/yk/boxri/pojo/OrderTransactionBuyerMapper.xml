<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunke.quartz_order.dao.OrderTransactionBuyerMapper" >
  <resultMap id="BaseResultMap" type="com.yunke.quartz_order.entity.OrderTransactionBuyer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="transaction_id" property="transaction_id" jdbcType="VARCHAR" />
    <result column="order_id" property="order_id" jdbcType="VARCHAR" />
    <result column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="shop_id" property="shop_id" jdbcType="INTEGER" />
    <result column="buyer_tax_identifier" property="buyer_tax_identifier" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="static_alias" property="static_alias" jdbcType="VARCHAR" />
    <result column="user_first_name" property="user_first_name" jdbcType="VARCHAR" />
    <result column="user_last_name" property="user_last_name" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from order_transaction_buyer
    where transaction_id = #{transaction_id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yunke.quartz_order.entity.OrderTransactionBuyer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into order_transaction_buyer (transaction_id, order_id, user_id, 
      shop_id, buyer_tax_identifier, email, 
      static_alias, user_first_name, user_last_name
      )
    values (#{transaction_id,jdbcType=VARCHAR}, #{order_id,jdbcType=VARCHAR}, #{user_id,jdbcType=INTEGER}, 
      #{shop_id,jdbcType=INTEGER}, #{buyer_tax_identifier,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{static_alias,jdbcType=VARCHAR}, #{user_first_name,jdbcType=VARCHAR}, #{user_last_name,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.yunke.quartz_order.entity.OrderTransactionBuyer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update order_transaction_buyer
    set order_id = #{order_id,jdbcType=VARCHAR},
      user_id = #{user_id,jdbcType=INTEGER},
      shop_id = #{shop_id,jdbcType=INTEGER},
      buyer_tax_identifier = #{buyer_tax_identifier,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      static_alias = #{static_alias,jdbcType=VARCHAR},
      user_first_name = #{user_first_name,jdbcType=VARCHAR},
      user_last_name = #{user_last_name,jdbcType=VARCHAR}
    where transaction_id = #{transaction_id,jdbcType=VARCHAR}
  </update>
  <update id="batchUpdate"  parameterType="com.yunke.quartz_order.entity.OrderTransactionBuyer">  
    <foreach collection="list" item="item" index="index" open="" close="" separator=";">  
         update order_transaction_buyer
        <set>  
	  order_id = #{item.order_id,jdbcType=VARCHAR},
      user_id = #{item.user_id,jdbcType=INTEGER},
      shop_id = #{item.shop_id,jdbcType=INTEGER},
      buyer_tax_identifier = #{item.buyer_tax_identifier,jdbcType=VARCHAR},
      email = #{item.email,jdbcType=VARCHAR},
      static_alias = #{item.static_alias,jdbcType=VARCHAR},
      user_first_name = #{item.user_first_name,jdbcType=VARCHAR},
      user_last_name = #{item.user_last_name,jdbcType=VARCHAR}
          </set>  
	where transaction_id = #{transaction_id,jdbcType=VARCHAR}     
	 </foreach>  
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select transaction_id, order_id, user_id, shop_id, buyer_tax_identifier, email, static_alias, 
    user_first_name, user_last_name
    from order_transaction_buyer
    where transaction_id = #{transaction_id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select transaction_id, order_id, user_id, shop_id, buyer_tax_identifier, email, static_alias, 
    user_first_name, user_last_name
    from order_transaction_buyer
  </select>
  <select id="dynamicSelect" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select transaction_id, order_id, user_id, shop_id, buyer_tax_identifier, email, static_alias, 
    user_first_name, user_last_name
    from order_transaction_buyer
    where order_id in
    <foreach collection="list" item="order_id" 
 		separator="," open="(" close=")">
 			#{order_id,jdbcType=VARCHAR}
 	</foreach> 
  </select>
  <insert id="insertBatch" parameterType="com.yunke.quartz_order.entity.OrderTransactionBuyer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into order_transaction_buyer (transaction_id, 
      order_id, user_id, shop_id, 
      buyer_tax_identifier, email, 
      static_alias, user_first_name, 
      user_last_name)
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.transaction_id,jdbcType=VARCHAR}, 
      #{item.order_id,jdbcType=VARCHAR}, #{item.user_id,jdbcType=INTEGER}, #{item.shop_id,jdbcType=INTEGER}, 
      #{item.buyer_tax_identifier,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, 
      #{item.static_alias,jdbcType=VARCHAR}, #{item.user_first_name,jdbcType=VARCHAR}, 
      #{item.user_last_name,jdbcType=VARCHAR})</foreach>
  </insert>
   <insert id="mergerBatch" parameterType="com.yunke.quartz_order.entity.OrderTransactionBuyer" > 
	insert into order_transaction_buyer (transaction_id, 
      order_id, user_id, shop_id, 
      buyer_tax_identifier, email, 
      static_alias, user_first_name, 
      user_last_name)
    values <foreach collection="list" item="item" index="index" separator="," > (#{item.transaction_id,jdbcType=VARCHAR}, 
      #{item.order_id,jdbcType=VARCHAR}, #{item.user_id,jdbcType=INTEGER}, #{item.shop_id,jdbcType=INTEGER}, 
      #{item.buyer_tax_identifier,jdbcType=VARCHAR}, #{item.email,jdbcType=VARCHAR}, 
      #{item.static_alias,jdbcType=VARCHAR}, #{item.user_first_name,jdbcType=VARCHAR}, 
      #{item.user_last_name,jdbcType=VARCHAR})</foreach>
	ON DUPLICATE KEY UPDATE
      order_id = VALUES(order_id),
      user_id = VALUES(user_id),
      shop_id = VALUES(shop_id),
      buyer_tax_identifier = VALUES(buyer_tax_identifier),
      email = VALUES(email),
      static_alias = VALUES(static_alias),
      user_first_name = VALUES(user_first_name),
      user_last_name = VALUES(user_last_name)
	</insert>
</mapper>